--- qa/t/test_private_attachments.t
+++ qa/t/test_private_attachments.t
@@ -29,17 +29,15 @@
 # First create a new bug with a private attachment.
 
 file_bug_in_product($sel, "TestProduct");
-$sel->type_ok("short_desc", "Some comments are private");
+my $bug_summary = "Some comments are private";
+$sel->type_ok("short_desc", $bug_summary);
 $sel->type_ok("comment", "and some attachments too, like this one.");
 $sel->check_ok("comment_is_private");
 $sel->click_ok('//input[@value="Add an attachment"]');
 $sel->type_ok("data", $config->{attachment_file});
 $sel->type_ok("description", "private attachment, v1");
 $sel->check_ok("ispatch");
-$sel->click_ok("commit");
-$sel->wait_for_page_to_load_ok(WAIT_TIME);
-$sel->is_text_present_ok('has been added to the database', 'Bug created');
-my $bug1_id = $sel->get_value('//input[@name="id" and @type="hidden"]');
+my $bug1_id = create_bug($sel, $bug_summary);
 $sel->is_text_present_ok("private attachment, v1 (");
 $sel->is_text_present_ok("and some attachments too, like this one.");
 $sel->is_checked_ok('//a[@id="comment_link_0"]/../..//div//input[@type="checkbox"]');
@@ -56,22 +54,14 @@
 $sel->is_text_present_ok("private attachment, v1");
 $sel->type_ok("comment", "this patch is public. Everyone can see it.");
 $sel->value_is("isprivate", "off");
-$sel->click_ok("create");
-$sel->wait_for_page_to_load_ok(WAIT_TIME);
-$sel->is_text_present_ok('regexp:Attachment #\d+ to bug \d+ created');
+edit_bug($sel, $bug1_id, $bug_summary, {id => "create"});
 
 # We need to store the attachment ID.
 
+$sel->is_text_present_ok("public attachment, v2");
 my $alink = $sel->get_attribute('//a[@title="public attachment, v2"]@href');
 $alink =~ /id=(\d+)/;
 my $attachment1_id = $1;
-
-# Be sure to redisplay the same bug, and make sure the new attachment is visible.
-
-$sel->click_ok("link=bug $bug1_id");
-$sel->wait_for_page_to_load_ok(WAIT_TIME);
-$sel->title_like(qr/^$bug1_id/);
-$sel->is_text_present_ok("public attachment, v2");
 $sel->is_text_present_ok("this patch is public. Everyone can see it.");
 ok(!$sel->is_checked('//a[@id="comment_link_1"]/../..//div//input[@type="checkbox"]'), "Public attachment is visible");
 logout($sel);
@@ -92,15 +82,10 @@
 
 $sel->click_ok('//a[@href="attachment.cgi?id=' . $attachment1_id . '&action=edit"]');
 $sel->wait_for_page_to_load_ok(WAIT_TIME);
-$sel->title_like(qr/^Attachment $attachment1_id Details for Bug $bug1_id/);
-$sel->is_text_present_ok("created by QA Admin");
+$sel->title_like(qr/Attachment $attachment1_id Details for Bug $bug1_id/);
+$sel->is_text_present_ok("created by " . $config->{admin_user_username});
 $sel->type_ok("comment", "This attachment is not mine.");
-$sel->click_ok("update");
-$sel->wait_for_page_to_load_ok(WAIT_TIME);
-$sel->is_text_present_ok("Changes to attachment $attachment1_id of bug $bug1_id submitted");
-$sel->click_ok("link=bug $bug1_id");
-$sel->wait_for_page_to_load_ok(WAIT_TIME);
-$sel->title_like(qr/^$bug1_id/);
+edit_bug($sel, $bug1_id, $bug_summary, {id => "update"});
 $sel->is_text_present_ok("This attachment is not mine");
 
 # Powerless users will always be able to view their own attachments, even
@@ -112,19 +97,14 @@
 $sel->type_ok("data", $config->{attachment_file});
 $sel->check_ok("ispatch");
 # The user doesn't have editbugs privs.
-$sel->is_text_present_ok("[no attachments can be made obsolete]");
+ok(!$sel->is_text_present("Check each existing attachment made obsolete by your new attachment"), "No attachments can be marked as obsolete");
 $sel->type_ok("description", "My patch, which I should see, always");
 $sel->type_ok("comment", "This is my patch!");
-$sel->click_ok("create");
-$sel->wait_for_page_to_load_ok(WAIT_TIME);
-$sel->is_text_present_ok('regexp:Attachment #\d+ to bug \d+ created');
+edit_bug($sel, $bug1_id, $bug_summary, {id => "create"});
+$sel->is_text_present_ok("My patch, which I should see, always (");
 $alink = $sel->get_attribute('//a[@title="My patch, which I should see, always"]@href');
 $alink =~ /id=(\d+)/;
 my $attachment2_id = $1;
-$sel->click_ok("link=bug $bug1_id");
-$sel->wait_for_page_to_load_ok(WAIT_TIME);
-$sel->title_like(qr/^$bug1_id/);
-$sel->is_text_present_ok("My patch, which I should see, always (");
 $sel->is_text_present_ok("This is my patch!");
 logout($sel);
 
@@ -134,15 +114,10 @@
 go_to_bug($sel, $bug1_id);
 $sel->click_ok('//a[@href="attachment.cgi?id=' . $attachment2_id . '&action=edit"]');
 $sel->wait_for_page_to_load_ok(WAIT_TIME);
-$sel->title_like(qr/^Attachment $attachment2_id Details for Bug $bug1_id/);
+$sel->title_like(qr/Attachment $attachment2_id Details for Bug $bug1_id/);
 $sel->check_ok("isprivate");
 $sel->type_ok("comment", "Making the powerless user's patch private.");
-$sel->click_ok("update");
-$sel->wait_for_page_to_load_ok(WAIT_TIME);
-$sel->is_text_present_ok("Changes to attachment $attachment2_id of bug $bug1_id submitted");
-$sel->click_ok("link=bug $bug1_id");
-$sel->wait_for_page_to_load_ok(WAIT_TIME);
-$sel->title_like(qr/^$bug1_id/);
+edit_bug($sel, $bug1_id, $bug_summary, {id => "update"});
 $sel->is_text_present_ok("My patch, which I should see, always (");
 $sel->is_checked_ok('//a[@id="comment_link_4"]/../..//div//input[@type="checkbox"]');
 $sel->is_text_present_ok("Making the powerless user's patch private.");
@@ -175,18 +150,13 @@
 go_to_bug($sel, $bug1_id);
 $sel->click_ok('//a[@href="attachment.cgi?id=' . $attachment2_id . '&action=edit"]');
 $sel->wait_for_page_to_load_ok(WAIT_TIME);
-$sel->title_like(qr/^Attachment $attachment2_id Details for Bug $bug1_id/);
+$sel->title_like(qr/Attachment $attachment2_id Details for Bug $bug1_id/);
 $sel->click_ok("link=Delete");
 $sel->wait_for_page_to_load_ok(WAIT_TIME);
 $sel->title_is("Delete Attachment $attachment2_id of Bug $bug1_id");
 $sel->is_text_present_ok("Do you really want to delete this attachment?");
 $sel->type_ok("reason", "deleted by Selenium");
-$sel->click_ok("delete");
-$sel->wait_for_page_to_load_ok(WAIT_TIME);
-$sel->is_text_present_ok("Changes to attachment $attachment2_id of bug $bug1_id submitted");
-$sel->click_ok("link=bug $bug1_id");
-$sel->wait_for_page_to_load_ok(WAIT_TIME);
-$sel->title_like(qr/^$bug1_id/);
+edit_bug_and_return($sel, $bug1_id, $bug_summary, {id => "delete"});
 $sel->is_text_present_ok("deleted by Selenium");
 $sel->click_ok("link=attachment $attachment2_id");
 $sel->wait_for_page_to_load_ok(WAIT_TIME);
